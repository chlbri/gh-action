name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - dev
      - staging

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Install node'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key:
            ${{ runner.os }}-pnpm-store-${{
            hashFiles('**/pnpm-lock.yaml')}}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Package
        run: pnpm run package

      - name: Test
        run: pnpm run test

  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use the action
        uses: ./
        id: testt
        with:
          milliseconds: 1000

      - name: Test the output time
        uses: actions/github-script@v6
        env:
          TIME: ${{ steps.testt.outputs.time }}
        with:
          script: |
            if(!process.env.TIME || process.env.TIME === 'undefined')
            {
              core.setFailed('TIME is undefined');
            }
            else
            {
              console.log(process.env.TIME);
            }
